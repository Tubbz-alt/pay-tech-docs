---
title: Reporting 
weight: 70
---

# Reporting 

You can extract reporting information from GOV.UK Pay manually, or via the
API.

## Manual reporting

You can sign in to your [GOV.UK Pay admin
account](https://selfservice.payments.service.gov.uk/login) and export
transaction information in a CSV file. 

For a given account, select __Transactions__ in the __Dashboard__ page.

You can filter transactions using the available search criteria, and then
select __Download all transaction details as a CSV file__. 

You can process CSV files using spreadsheet software.

## Reporting via the GOV.UK Pay API 

Before reading this section, you should read the section describing [Making
payments](/making_payments). 

You can get data from the GOV.UK Pay API in a format suitable for automatic
processing. For example, you could develop software to query the GOV.UK Pay
API for payment data periodically, and import the data into your finance
system. This could remove routine manual operations from your workflow, and
lead to significant cost savings for your organisation.

You can use the GOV.UK Pay API to:

* get information about a single payment
* generate a list of payments matching search criteria  

## Get information about a single payment

`GET /v1/payments/paymentId`

1. Sign in to <a href="https://gds-payments.gelato.io/api-explorer/"
   target="blank">the API Explorer</a> (link opens in new window).  
2. Under __Resource__, select __{Payment Id}. Under __Action__, select <a
   href="https://gds-payments.gelato.io/api-explorer/gov-uk-pay-api/versions/1.0.2/general/"
   target="blank">__Find payment by ID__</a> (link opens in new window). 
   
If a payment exists, the JSON response body to this API call contains a
`"state"` field. You can use this information when designing a service.  

For example, the response for a successful payment contains:

```
  "state": {
    "status": "success",
    "finished": true
    },
```

With a successful payment, you know that the user can continue their journey
through your service.

For a valid request, the JSON response body to this API call also contains
other useful information. For example, if a user has gone far enough in their
payment journey, the `"card_details"` section contains information that they
have entered when making a payment: 

```
  "card_details": {
    "last_digits_card_number": "1111",
    "first_digits_card_number": "100002",
    "cardholder_name": "Sherlock Holmes",
    "expiry_date": "12/21",
    "billing_address": {
      "line1": "221 Baker Street",
      "line2": "Flat b",
      "postcode": "NW16XE",
      "city": "London",
      "country": "GB"
    },
```

## Generate a list of payments (search payments) 

`GET /v1/payments`

1. Sign in to <a href="https://gds-payments.gelato.io/api-explorer/"
   target="blank">the API Explorer</a> (link opens in new window).  
2. Under __Resource__, select __General__. Under __Action__, select <a
   href="https://gds-payments.gelato.io/api-explorer/gov-uk-pay-api/versions/1.0.2/general/"
   target="blank">__Search payments__</a> (link opens in new window). 

### Filter by date

You can filter searches by date, using `from_date` and `to_date`. These take
inputs based on a subset of ISO8601. For example, a valid input would be
`2015-08-13T12:35:00Z`.

`from_date` is the start date for payments to be searched, inclusive. 
`to_date` is the end date for payments to be searched, exclusive. 

### Search criteria 

You can search payments using the following criteria (query parameters):

* `reference`
* `email`
* `state` (example: `success`)
* `card_brand` (example: `master-card`)
* `first_digits_card_number`
* `last_digits_card_number`
* `cardholder_name`

If you search for a specific payment, all criteria you use must match.
Otherwise, that payment will not be returned in the results. 

An example search request:

`GET
/v1/payments?from_date=2018-10-01T13:30:00Z&to_date=2018-10-14T15:00:00Z&reference=12345&state=success)`

If your request has no query parameters, the API will return all payments. 

### Pagination

You can use the `page` and `display-size` parameters for pagination. These
must be a positive integer. For example, for a search matching 1543 payments
where `display-size` is 500 and `page` is `2`, the result will return payments
501-1000.

`page` defaults to `1`.
`display-size` defaults to `500`. 

